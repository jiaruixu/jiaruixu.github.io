<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-11T23:11:29.396Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>How do I build my own blog with Hexo and github</title>
    <link href="http://yoursite.com/2018/04/11/How-do-I-bulid-my-own-blog-with-Hexo-and-Github/"/>
    <id>http://yoursite.com/2018/04/11/How-do-I-bulid-my-own-blog-with-Hexo-and-Github/</id>
    <published>2018-04-11T18:01:04.000Z</published>
    <updated>2018-04-11T23:11:29.396Z</updated>
    
    <content type="html"><![CDATA[<p>昨晚熬夜终于搭好了一个属于自己的博客，但是对markdown语法还不是很熟悉，于是决定写一篇搭博客的教程来熟悉一下。前人掉坑，后人绕行。那么，废话不多说，就开始吧！:)</p><p>本文主要是针对 <strong>Mac OS</strong> 系统上基于 <strong>Github</strong> 和 <strong>Hexo</strong> 的博客搭建，<strong>Windows</strong> 系统上的搭建过程类似，但是会略有不同，可以作为参考。</p><h2 id="Github-和-SSH-设置"><a href="#Github-和-SSH-设置" class="headerlink" title="Github 和 SSH 设置"></a>Github 和 SSH 设置</h2><p>博客搭建的大概思路就是用 <strong>Github</strong> 获得免费的域名和空间，然后使用搭建博客的模版 <strong>Hexo</strong> 来让博客更好看。</p><h3 id="注册-Github"><a href="#注册-Github" class="headerlink" title="注册 Github"></a>注册 Github</h3><p>首先去 <a href="https://github.com/" target="_blank" rel="noopener">Github</a> 上注册你的username，建议使用常用邮箱，Github上很多通知都是通过邮箱的。比如你的主页上传并构建成功会通过邮箱通知，更重要的是，如果构建失败的话也会在邮件中说明原因。</p><h3 id="本地SSH-Keys的设置"><a href="#本地SSH-Keys的设置" class="headerlink" title="本地SSH Keys的设置"></a>本地SSH Keys的设置</h3><p>我们需要通过SSH来让本地编辑的内容托管到Github，所以要对先SSH进行设置。</p><p>首先检查电脑上现有的SSH Keys，在Terminal输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh</span><br></pre></td></tr></table></figure><p>输入 <code>ls</code> 查看是否有ssh keys。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br></pre></td></tr></table></figure><p>如果只显示一个 <code>known_hosts</code> ，说明没有ssh keys，可以跳过这一步，否则需要备份和移除原来的SSH Keys (因为我之前没有SSH Keys，所以我没有用到这一步)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ config  id_rsa  id_rsa.pub  known_hosts</span><br><span class="line">$ mkdir key_backup</span><br><span class="line">$ cp id_rsa* key_backup</span><br><span class="line">$ rm id_rsa*</span><br></pre></td></tr></table></figure><p>输入以下代码形成新的SSH Key文件，我们只需要默认设置就好，所以当需要输入文件名的时候，回车就好。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C “your-email”</span><br><span class="line"></span><br><span class="line">显示：</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt;</span><br></pre></td></tr></table></figure><p>上面代码中的 “your-email” 就是你在学习Git时，你自己设置的Git用户名时给出的email地址 ( 我的话，使用的是注册github的email )。</p><p>然后系统会要你输入加密串（Passphrase）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;</span><br><span class="line">Enter same passphrase again:&lt;再次输入加密串&gt;</span><br></pre></td></tr></table></figure><p>最后看到SSH Key success，就成功设置SSH Key了。</p><h3 id="添加SSH-Key到GitHub"><a href="#添加SSH-Key到GitHub" class="headerlink" title="添加SSH Key到GitHub"></a>添加SSH Key到GitHub</h3><p>在本机设置SSH Key之后，需要添加到 GitHub 上，以完成SSH链接的设置。输入下面代码打开SSH文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ open ~/.ssh</span><br></pre></td></tr></table></figure><p>用文本编辑工具打开 <strong>id_rsa.pub</strong> 文件。</p><p>登录Github，点击右侧自己的头像，选择 <strong>“setting”</strong> 。</p><p><img src="/2018/04/11/How-do-I-bulid-my-own-blog-with-Hexo-and-Github/githubSet.png" alt="Gihub Setting"></p><p>选择右侧的 <strong>“SSH and GPG Keys”</strong> 项，把 <strong>id_rsa.pub</strong> 文件中的内容复制到如下位置，然后点击 <strong>Add Key</strong> 按钮即可。</p><p><img src="/2018/04/11/How-do-I-bulid-my-own-blog-with-Hexo-and-Github/sshKey.jpg" alt="SSH Key"></p><p>PS：如果需要配置多个GitHub账号，可以参看这个 <a href="http://ju.outofmemory.cn/entry/16775" target="_blank" rel="noopener">多个github帐号的SSH key切换</a>，不过需要提醒一下的是，如果你只是通过这篇文章中所述配置了Host，那么你多个账号下面的提交用户会是一个人，所以需要通过命令git config –global –unset user.email删除用户账户设置，在每一个repo下面使用git config –local user.email ‘你的github邮箱@mail.com’命令单独设置用户账户信息。 （原po写的这个没看懂QAQ，反正暂时用不到，呼～）</p><p>可以输入下面的命令，看看设置是否成功，<a href="mailto:`git@github.com" target="_blank" rel="noopener">`git@github.com</a>` 的部分不要修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果是下面的反应：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established.</span><br><span class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></table></figure><p>不要紧张，输入yes就好，然后会看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi &lt;em&gt;username&lt;/em&gt;! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h3 id="设置你的账号信息"><a href="#设置你的账号信息" class="headerlink" title="设置你的账号信息"></a>设置你的账号信息</h3><p>现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。</p><p>Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;你的名字&quot;</span><br><span class="line">$ git config --global user.email &quot;your_email@youremail.com&quot;</span><br></pre></td></tr></table></figure><p>好了，你已经可以成功连接GitHub了。</p><h2 id="基于Hexo搭建博客"><a href="#基于Hexo搭建博客" class="headerlink" title="基于Hexo搭建博客"></a>基于Hexo搭建博客</h2><h3 id="创建项目仓库"><a href="#创建项目仓库" class="headerlink" title="创建项目仓库"></a>创建项目仓库</h3><p>点击Github页面右上角的“+”的符号，选择 <strong>“New repository”</strong> ,然后在 <strong>“Repository name”</strong> 输入框里面填写 <code>username.github.io</code>，这里 “username” 是 Github 账号名。例如，下图中就是 <code>suncrazy.github.io</code>。</p><p><img src="/2018/04/11/How-do-I-bulid-my-own-blog-with-Hexo-and-Github/repoName.jpg" alt="Repo Name"></p><p>然后其他的地方都是默认即可，点击 <strong>“Create repository”</strong> 即可创建成功。到目前为止，github部分的内容就完成了。</p><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><p>接下来需要配置和使用Github，需要用到Git。Mac OS X 中自带Git，不需要安装，在Terminal中输入以下命令可以查看Git版本号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br></pre></td></tr></table></figure><h3 id="安装-Nodes-js"><a href="#安装-Nodes-js" class="headerlink" title="安装 Nodes.js"></a>安装 Nodes.js</h3><p>从 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Nodes官网</a> 下载并安装 Nodes.js。<br>Node.js 安装完成以后，npm 也被安装完成，简化了工作。检测安装是否成功，可以在 Mac Terminal 中输入以下命令查看 Node.js 和 npm 的版本号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>Git、Node.js 和 npm 安装完成以后，接下来就可以安装 Hexo 了。在 Mac Terminal 中输入以下命令即可执行安装（可能需要输入电脑密码）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install hexo -g</span><br></pre></td></tr></table></figure><p>安装完成后，输入以下命令查看Hexo版本号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure><h3 id="初始化-Hexo-和-Git"><a href="#初始化-Hexo-和-Git" class="headerlink" title="初始化 Hexo 和 Git"></a>初始化 Hexo 和 Git</h3><p>在根目录下，用以下语句新建一个文件夹，例如“blogGithub”，这个文件夹将是你的博客的根目录，以后与博客有关的所有文件都是存放在这里。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd</span><br><span class="line">$ mkdir blogGithub</span><br></pre></td></tr></table></figure><p>进入你新建的这个文件夹，执行Hexo初始化以及Git初始化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd blogGithub</span><br><span class="line">$ hexo init</span><br><span class="line">$ git init</span><br></pre></td></tr></table></figure><p>这个时候，你会发现在 “～/blogGithub” 中多了很多文件夹。</p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>在部署博客之前，需要先安装依赖，执行以下命令即可（可能需要输入电脑密码）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install</span><br></pre></td></tr></table></figure><h3 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h3><p>执行以下命令，生成静态页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>执行以下命令，启动服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>Terminal 界面如图所示。</p><p><img src="/2018/04/11/How-do-I-bulid-my-own-blog-with-Hexo-and-Github/hexoServer.png" alt="Hexo Server"></p><p>打开浏览器，输入 <code>http://localhost:4000/</code> ，如下图所示。</p><p><img src="/2018/04/11/How-do-I-bulid-my-own-blog-with-Hexo-and-Github/hexoPage.jpg" alt="Hexo Page"></p><p>这就是你的博客的界面，其中显示的内容是默认的内容，你可以随意修改。</p><p>回到Terminal界面，使用 <code>Ctrl+C</code> 停止服务。</p><h3 id="博客上传"><a href="#博客上传" class="headerlink" title="博客上传"></a>博客上传</h3><p>将博客内容上传到Github，需要安装Git部署器，执行以下命令安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装完成之后，利用文本编辑器打开 hexo 目录 (这里是 “～/blogGithub” ) 中的 “_config.yml” 文件，在文件最末尾，修改如下配置：</p><p><img src="/2018/04/11/How-do-I-bulid-my-own-blog-with-Hexo-and-Github/config.png" alt="Config"></p><p>其中，”username” 是Github账户名。</p><p>在 Hexo 目录 (这里是 “～/blogGithub” ) 下执行以下命令， 即可完成对将静态博客部署到 GitHub 上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>部署成功以后，在浏览器中输入 <code>http://username.github.io</code> 即可在线浏览自己的博客啦~</p><h2 id="创建新博客"><a href="#创建新博客" class="headerlink" title="创建新博客"></a>创建新博客</h2><p>以下命令均在 Hexo 目录 (这里是 “～/blogGithub” ) 下执行。</p><h3 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h3><p>新建博客，执行以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;text_blog&quot;</span><br></pre></td></tr></table></figure><p> 在 <code>/hexo/source/_posts/</code> 目录下即可看到一个名为 <code>test-blog.md</code> 文件，打开写入自己的博客内容。</p><h3 id="编写博客"><a href="#编写博客" class="headerlink" title="编写博客"></a>编写博客</h3><p>Mac 下可以考虑下载和安装 <a href="https://macdown.uranusjr.com/" target="_blank" rel="noopener">MacDown</a> 进行博客编写。博客编写使用 <a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown</a> 进行编写，在 MacDown 中，自带 help 文件，怎么写说得很详细，也可以参考 <a href="https://www.jianshu.com/p/148e26058916" target="_blank" rel="noopener">MacDown的使用规范总结</a> 。</p><p>在 Hexo 中，空格很重要，比如一级标题显示需要写成 <code># 一级标题</code> ，写成 <code>#一级标题</code> 就无法显示成一级标题。另外，为了方便插入图片，需要在 Hexo 目录下的 “_config.yml” 配置文件中，找到这个配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: false</span><br></pre></td></tr></table></figure><p>把这里的false改为true，开启hexo的媒体文件支持。</p><p>在命令行中，跳转到hexo目录下，使用以下语句安装图片插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>插件会安装到 “node_moudules” 目录下，名为 “hexo-asset-image”。以上执行完毕后，在命令行执行：hexo new “文件”时，会在_post文件夹下同时生成md文件和同名文件夹，这个同名文件夹就是用来放图片的，把你在该文章中需要显示的图片放进去，然后在markdown中选择该目录下的图片使用，这样当md编译生成html文件时，会把图片拷贝到html文件同目录中。最后执行hexo d -g 部署到服务器时，图片也就被部署到服务器中了。</p><p>注意：如果直接把图片拖动到markdown编辑器中，其路径可能为绝对路径，需要改下：</p><p><img src="/2018/04/11/How-do-I-bulid-my-own-blog-with-Hexo-and-Github/absolute.png" alt="absolute"></p><p>修改为相对路径：</p><p><img src="/2018/04/11/How-do-I-bulid-my-own-blog-with-Hexo-and-Github/relate.png" alt="relate"></p><h3 id="发布新博客"><a href="#发布新博客" class="headerlink" title="发布新博客"></a>发布新博客</h3><p>编辑好博客以后，即可执行以下命令部署到Github上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h2 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h2><p>了解Hexo命令可以看 <a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">这里</a>，这里列出一些常用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init       //在指定目录执行该命令，会将当前目录初始化为hexo站点，生成hexo站点所需的一切文件</span><br><span class="line">$ hexo new “my new blog title”   //新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</span><br><span class="line">$ hexo clean      // 清除缓存，如果对本地文件做了修改，同步到远程验证修改的效果之前，先clean，清除缓存</span><br><span class="line">$ hexo generate   // 可以简写成hexo g 根据markdown文件生成静态文件</span><br><span class="line">$ hexo server     // 或者简写成hexo s 启动本地hexo 服务器，默认localhost:4000可以访问</span><br><span class="line">$ hexo deploy     // 或者简写成hexo d 将本地修改，部署到远端</span><br><span class="line">$ hexo version    // 显示hexo版本</span><br></pre></td></tr></table></figure><p>一些快捷键：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g == hexo generate</span><br><span class="line">$ hexo d == hexo deploy</span><br><span class="line">$ hexo s == hexo server</span><br><span class="line">$ hexo n == hexo new</span><br></pre></td></tr></table></figure><h2 id="配置博客主题"><a href="#配置博客主题" class="headerlink" title="配置博客主题"></a>配置博客主题</h2><p>上面的内容是搭建起了一个正常的博客，但是如果我们想要一个更加好看的博客界面的话，我们必须得使用别的主题。进入 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo官网</a> 可以选择很多主题，我选择的是 <a href="https://github.com/fi3ework/hexo-theme-archer" target="_blank" rel="noopener">hexo-theme-archer</a> 。原po做得特别好，而且遇到问题问他，回复速度也巨快～。在按照原po在Github上写的说明就可以修改完配置文件后，运行下列语句即可部署到 Github 上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>此处感谢一下各位写详细教程的大大们，毕竟小白我才体会到，写一篇教程要花很多时间和精力。另外特别感谢下博客主题的作者 <strong>fi3ework</strong> 贡献的主题，作者 <a href="https://github.com/fi3ework" target="_blank" rel="noopener">Github</a> ， 博客主题 <a href="https://github.com/fi3ework/hexo-theme-archer" target="_blank" rel="noopener">hexo-theme-archer</a> 。</p><p>[1] <a href="https://zhuanlan.zhihu.com/p/22718911" target="_blank" rel="noopener">github+hexo+jacman搭建个人博客</a></p><p>[2] <a href="https://www.ezlippi.com/blog/2015/03/github-pages-blog.html" target="_blank" rel="noopener">利用github-pages建立个人博客</a></p><p>[3] <a href="http://lijiankun24.com/Mac%E4%B8%8BHexo%E5%92%8CGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A21/" target="_blank" rel="noopener">Mac 下 Hexo 和 GitHub-Pages 搭建个人博客（一）</a></p><p>[4] <a href="https://madongqiang2201.github.io/2016/07/21/Mac%E4%B8%8BHexo%EF%BC%8Bgithub-pages%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/" target="_blank" rel="noopener">Mac搭建Hexo博客及NexT主题配置优化</a></p><p>[5] <a href="http://www.jensondev.me/2017/04/25/hexo%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%8F%91%E5%B8%83%E5%90%8E%E4%B8%8D%E8%83%BD%E6%98%BE%E7%A4%BA%E7%9A%84%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener">hexo本地图片发布后不能显示的问题</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨晚熬夜终于搭好了一个属于自己的博客，但是对markdown语法还不是很熟悉，于是决定写一篇搭博客的教程来熟悉一下。前人掉坑，后人绕行。那么，废话不多说，就开始吧！:)&lt;/p&gt;
&lt;p&gt;本文主要是针对 &lt;strong&gt;Mac OS&lt;/strong&gt; 系统上基于 &lt;strong
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Hello 2018</title>
    <link href="http://yoursite.com/2018/04/11/Hello-2018/"/>
    <id>http://yoursite.com/2018/04/11/Hello-2018/</id>
    <published>2018-04-11T06:16:24.000Z</published>
    <updated>2018-04-11T23:12:41.709Z</updated>
    
    <content type="html"><![CDATA[<p>Hello, this is my very first blog. I’m new to GitHub and still have much to learn. </p><p>I’m going to write something related to what I read and my research. We can discuss in this blog and learn together. :)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hello, this is my very first blog. I’m new to GitHub and still have much to learn. &lt;/p&gt;
&lt;p&gt;I’m going to write something related to what I
      
    
    </summary>
    
    
  </entry>
  
</feed>
